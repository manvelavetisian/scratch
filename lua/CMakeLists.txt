
SET(LUA_COMPILER luac5.1.exe)
GET_TARGET_PROPERTY(BOOTSTRAP bootstrap LOCATION)

FILE(GLOB_RECURSE SCRIPTS RELATIVE ${SCRATCH_LUA_DIR} *.lua)

SET(COMPILED_SCRIPTS_LIST)

SET(ARCHIVE ${EXECUTABLE_OUTPUT_PATH}/pack0.dat)
SET(ARCHIVE_BUILDER_SCRIPT "local archive = util.ArchiveWriter()\narchive:create('${ARCHIVE}')\n")

FOREACH(SOURCE ${SCRIPTS})
	SET(TARGET ${CMAKE_CURRENT_BINARY_DIR}/${SOURCE})

	GET_FILENAME_COMPONENT(TARGET_PATH ${TARGET} PATH)
	FILE(MAKE_DIRECTORY ${TARGET_PATH})

	ADD_CUSTOM_COMMAND(
		OUTPUT ${TARGET}
		COMMAND ${LUA_COMPILER} -s -o ${TARGET} ${SCRATCH_LUA_DIR}/${SOURCE}
		DEPENDS ${SCRATCH_LUA_DIR}/${SOURCE}
		COMMENT "Compiling Lua script ${SOURCE}"
		VERBATIM)

    SET_SOURCE_FILES_PROPERTIES(${TARGET} PROPERTIES GENERATED TRUE)

	LIST(APPEND COMPILED_SCRIPTS_LIST ${TARGET})
	SET(ARCHIVE_BUILDER_SCRIPT "${ARCHIVE_BUILDER_SCRIPT}archive:write_file('${SOURCE}', '${TARGET}')\n")
ENDFOREACH()

SET(ARCHIVE_BUILDER_SCRIPT "${ARCHIVE_BUILDER_SCRIPT}archive:close()\n")

SET(ARCHIVE_BUILDER_PATH ${CMAKE_CURRENT_BINARY_DIR}/build_archive.lua)
FILE(WRITE ${ARCHIVE_BUILDER_PATH} ${ARCHIVE_BUILDER_SCRIPT})

ADD_CUSTOM_COMMAND(
	OUTPUT ${ARCHIVE}
	COMMAND ${BOOTSTRAP} ${ARCHIVE_BUILDER_PATH}
	DEPENDS bootstrap ${COMPILED_SCRIPTS_LIST}
	COMMENT "Building ${ARCHIVE}..."
	VERBATIM)

ADD_CUSTOM_TARGET(scripts DEPENDS ${ARCHIVE})
